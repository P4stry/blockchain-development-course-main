/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MyERC20TokenOZ,
  MyERC20TokenOZInterface,
} from "../../contracts/MyERC20TokenOZ";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018a3380380620018a3833981810160405281019062000037919062000521565b838381600390816200004a919062000812565b5080600490816200005c919062000812565b50505081600560006101000a81548160ff021916908360ff1602179055506200008c33826200009660201b60201c565b5050505062000a30565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200010b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200010291906200093e565b60405180910390fd5b6200011f600083836200012360201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001795780600260008282546200016c91906200098a565b925050819055506200024f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000208578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620001ff93929190620009d6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200029a5780600260008282540392505081905550620002e7565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000346919062000a13565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003bc8262000371565b810181811067ffffffffffffffff82111715620003de57620003dd62000382565b5b80604052505050565b6000620003f362000353565b9050620004018282620003b1565b919050565b600067ffffffffffffffff82111562000424576200042362000382565b5b6200042f8262000371565b9050602081019050919050565b60005b838110156200045c5780820151818401526020810190506200043f565b60008484015250505050565b60006200047f620004798462000406565b620003e7565b9050828152602081018484840111156200049e576200049d6200036c565b5b620004ab8482856200043c565b509392505050565b600082601f830112620004cb57620004ca62000367565b5b8151620004dd84826020860162000468565b91505092915050565b6000819050919050565b620004fb81620004e6565b81146200050757600080fd5b50565b6000815190506200051b81620004f0565b92915050565b600080600080608085870312156200053e576200053d6200035d565b5b600085015167ffffffffffffffff8111156200055f576200055e62000362565b5b6200056d87828801620004b3565b945050602085015167ffffffffffffffff81111562000591576200059062000362565b5b6200059f87828801620004b3565b9350506040620005b2878288016200050a565b9250506060620005c5878288016200050a565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200062457607f821691505b6020821081036200063a5762000639620005dc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000665565b620006b0868362000665565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006f3620006ed620006e784620004e6565b620006c8565b620004e6565b9050919050565b6000819050919050565b6200070f83620006d2565b620007276200071e82620006fa565b84845462000672565b825550505050565b600090565b6200073e6200072f565b6200074b81848462000704565b505050565b5b8181101562000773576200076760008262000734565b60018101905062000751565b5050565b601f821115620007c2576200078c8162000640565b620007978462000655565b81016020851015620007a7578190505b620007bf620007b68562000655565b83018262000750565b50505b505050565b600082821c905092915050565b6000620007e760001984600802620007c7565b1980831691505092915050565b6000620008028383620007d4565b9150826002028217905092915050565b6200081d82620005d1565b67ffffffffffffffff81111562000839576200083862000382565b5b6200084582546200060b565b6200085282828562000777565b600060209050601f8311600181146200088a576000841562000875578287015190505b620008818582620007f4565b865550620008f1565b601f1984166200089a8662000640565b60005b82811015620008c4578489015182556001820191506020850194506020810190506200089d565b86831015620008e45784890151620008e0601f891682620007d4565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200092682620008f9565b9050919050565b620009388162000919565b82525050565b60006020820190506200095560008301846200092d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200099782620004e6565b9150620009a483620004e6565b9250828201905080821115620009bf57620009be6200095b565b5b92915050565b620009d081620004e6565b82525050565b6000606082019050620009ed60008301866200092d565b620009fc6020830185620009c5565b62000a0b6040830184620009c5565b949350505050565b600060208201905062000a2a6000830184620009c5565b92915050565b610e638062000a406000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610ab7565b60405180910390f35b6100d060048036038101906100cb9190610b72565b610292565b6040516100dd9190610bcd565b60405180910390f35b6100ee6102b5565b6040516100fb9190610bf7565b60405180910390f35b61011e60048036038101906101199190610c12565b6102bf565b60405161012b9190610bcd565b60405180910390f35b61013c6102ee565b6040516101499190610c81565b60405180910390f35b61016c60048036038101906101679190610c9c565b610305565b6040516101799190610bf7565b60405180910390f35b61018a61034d565b6040516101979190610ab7565b60405180910390f35b6101ba60048036038101906101b59190610b72565b6103df565b6040516101c79190610bcd565b60405180910390f35b6101ea60048036038101906101e59190610cc9565b610402565b6040516101f79190610bf7565b60405180910390f35b60606003805461020f90610d38565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d38565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d610489565b90506102aa818585610491565b600191505092915050565b6000600254905090565b6000806102ca610489565b90506102d78582856104a3565b6102e2858585610537565b60019150509392505050565b6000600560009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461035c90610d38565b80601f016020809104026020016040519081016040528092919081815260200182805461038890610d38565b80156103d55780601f106103aa576101008083540402835291602001916103d5565b820191906000526020600020905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b6000806103ea610489565b90506103f7818585610537565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61049e838383600161062b565b505050565b60006104af8484610402565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105315781811015610521578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161051893929190610d78565b60405180910390fd5b6105308484848403600061062b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105a95760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105a09190610daf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361061b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106129190610daf565b60405180910390fd5b610626838383610802565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361069d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106949190610daf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361070f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107069190610daf565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107fc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107f39190610bf7565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108545780600260008282546108489190610df9565b92505081905550610927565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108e0578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108d793929190610d78565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097057806002600082825403925050819055506109bd565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a1a9190610bf7565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a61578082015181840152602081019050610a46565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a8982610a27565b610a938185610a32565b9350610aa3818560208601610a43565b610aac81610a6d565b840191505092915050565b60006020820190508181036000830152610ad18184610a7e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0982610ade565b9050919050565b610b1981610afe565b8114610b2457600080fd5b50565b600081359050610b3681610b10565b92915050565b6000819050919050565b610b4f81610b3c565b8114610b5a57600080fd5b50565b600081359050610b6c81610b46565b92915050565b60008060408385031215610b8957610b88610ad9565b5b6000610b9785828601610b27565b9250506020610ba885828601610b5d565b9150509250929050565b60008115159050919050565b610bc781610bb2565b82525050565b6000602082019050610be26000830184610bbe565b92915050565b610bf181610b3c565b82525050565b6000602082019050610c0c6000830184610be8565b92915050565b600080600060608486031215610c2b57610c2a610ad9565b5b6000610c3986828701610b27565b9350506020610c4a86828701610b27565b9250506040610c5b86828701610b5d565b9150509250925092565b600060ff82169050919050565b610c7b81610c65565b82525050565b6000602082019050610c966000830184610c72565b92915050565b600060208284031215610cb257610cb1610ad9565b5b6000610cc084828501610b27565b91505092915050565b60008060408385031215610ce057610cdf610ad9565b5b6000610cee85828601610b27565b9250506020610cff85828601610b27565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d5057607f821691505b602082108103610d6357610d62610d09565b5b50919050565b610d7281610afe565b82525050565b6000606082019050610d8d6000830186610d69565b610d9a6020830185610be8565b610da76040830184610be8565b949350505050565b6000602082019050610dc46000830184610d69565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0482610b3c565b9150610e0f83610b3c565b9250828201905080821115610e2757610e26610dca565b5b9291505056fea264697066735822122045b8afd69f49be847be6fbc92cf9e4ae0d4c0926ff0cdd333aeae9fbf8aeec2464736f6c63430008140033";

type MyERC20TokenOZConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyERC20TokenOZConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyERC20TokenOZ__factory extends ContractFactory {
  constructor(...args: MyERC20TokenOZConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    ) as Promise<
      MyERC20TokenOZ & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyERC20TokenOZ__factory {
    return super.connect(runner) as MyERC20TokenOZ__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC20TokenOZInterface {
    return new Interface(_abi) as MyERC20TokenOZInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MyERC20TokenOZ {
    return new Contract(address, _abi, runner) as unknown as MyERC20TokenOZ;
  }
}
